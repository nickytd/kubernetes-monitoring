kubeControllerManager:
  enabled: false
kubeEtcd:
  enabled: false
kubeScheduler:
  enabled: false
kubeProxy:
  enabled: false

kube-state-metrics:
  autosharding:
    enabled: false
  replicas: 1

prometheusOperator:
  logFormat: json
  logLevel: warn  
   
prometheus:
  ingress:
    enabled: true
    hosts:
      - prometheus.local.dev    
    annotations:
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
      nginx.ingress.kubernetes.io/rewrite-target: "/"
    tls:
    - hosts:  
        - prometheus.local.dev
      secretName: prometheus-tls   
  thanosService:
    enabled: true
  thanosIngress:
    enabled: false    
  prometheusSpec:
    logLevel: warn
    logFormat: json
    ### Thanos
    thanos:
      version: v0.18.0
      logLevel: info
    shards: 1
    replicas: 1
    retention: 1d
    externalLabels:
      cluster: /develop-01
    ruleSelector: {}
    serviceMonitorSelector: {}
    podMonitorSelector: {}
    ruleSelectorNilUsesHelmValues: false
    serviceMonitorSelectorNilUsesHelmValues: false
    podMonitorSelectorNilUsesHelmValues: false
    externalUrl: https://prometheus.local.dev
    resources: 
      requests:
        memory: 100Mi
        cpu: "0.1"
      limits:
        memory: 500Mi  
        cpu: "1"
    additionalAlertRelabelConfigs:
    - separator: ;
      regex: label_(.+)
      replacement: $1
      action: labelmap
    - separator: ;
      regex: label_(.+)
      action: labeldrop
    - source_labels: ["system_id","namespace"]
      separator: ;
      target_label: system_id
      regex: '([a-zA-Z0-9._-]*)|(?:;)([a-zA-Z0-9._-]*)'
      replacement: ${0}
    - source_labels: ["system_id"]
      target_label: system_id
      regex: '(?:;?)?(.*)'
      replacement: /develop-01/${1}    
    additionalScrapeConfigs:      
      # additional configs for pod annotations
      - job_name: 'kubernetes-pods'
        kubernetes_sd_configs:
        - role: pod
        relabel_configs:
        - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
          action: keep
          regex: true
        - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
          action: replace
          target_label: __metrics_path__
          regex: (.+)
        - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
          action: replace
          regex: ([^:]+)(?::\d+)?;(\d+)
          replacement: $1:$2
          target_label: __address__
        - action: labelmap
          regex: __meta_kubernetes_pod_label_(.+)
        - source_labels: [__meta_kubernetes_namespace]
          action: replace
          target_label: kubernetes_namespace
        - source_labels: [__meta_kubernetes_pod_name]
          action: replace
          target_label: kubernetes_pod_name   

prometheus-node-exporter:
  extraArgs:
  - --log.level=warn
  - --log.format=json
  - --collector.systemd
  - --collector.processes
  - --collector.systemd.unit-include=(docker|kubelet|containerd).service
  - --collector.filesystem.ignored-mount-points=^/(dev|proc|sys|.*var/lib/docker/.+|.*var/lib/kubelet/.+)($|/)
  - --collector.filesystem.ignored-fs-types=^(autofs|binfmt_misc|cgroup|configfs|debugfs|devpts|devtmpfs|fusectl|hugetlbfs|mqueue|overlay|proc|procfs|pstore|rpc_pipefs|securityfs|sysfs|tracefs|netfs)$
  extraHostVolumeMounts:
    - name: system-dbus-socket
      mountPath: /var/run/dbus/system_bus_socket
      readOnly: true
      hostPath: /var/run/dbus/system_bus_socket
  resources:
    limits:
      cpu: 100m
      memory: 500Mi
    requests:
      cpu: 25m
      memory: 100Mi    


alertmanager:
  ingress:
    enabled: true
    hosts:
      - alertmanager.local.dev
    tls:
    - hosts:
        - alertmanager.local.dev    
      secretName: alertmanager-tls      
  alertmanagerSpec:
    logFormat: json
    logLevel: warn 
    externalUrl: https://alertmanager.local.dev


grafana:
  ingress:
    enabled: true
    hosts:
      - grafana.local.dev
    tls:
    - hosts:  
        - grafana.local.dev
      secretName: grafana-tls
  additionalDataSources:
    - name: elk-containers
      type: elasticsearch
      access: proxy
      database: "[containers-]YYYY.MM.DD"
      url: https://elk-client.logging.svc:9200
      basicAuth: true
      basicAuthUser: esadmin
      editable: false
      jsonData:
        interval: Daily
        timeField: "@timestamp"
        esVersion: 70
        logMessageField: message
        tlsSkipVerify: true
      secureJsonData:
        basicAuthPassword: esadmin
    - name: elk-journals
      type: elasticsearch
      access: proxy
      database: "[journals-]YYYY.MM.DD"
      url: https://elk-client.logging.svc:9200
      basicAuth: true
      basicAuthUser: esadmin
      editable: false
      jsonData:
        interval: Daily
        timeField: "@timestamp"
        esVersion: 70
        logMessageField: message
        tlsSkipVerify: true
      secureJsonData:
        basicAuthPassword: esadmin    
  dashboardProviders: 
    dashboardproviders.yaml:
      apiVersion: 1
      providers:
      - name: 'default'
        orgId: 1
        folder: ''
        type: file
        disableDeletion: false
        editable: true
        options:
          path: /var/lib/grafana/dashboards/default
  dashboards:
    default:
      node-exporter-full:
        gnetId: 1860
        revision: 21
        datasource: Prometheus
      blackbox-exporter:
        gnetId: 7587
        revision: 3
        datasource: Prometheus
      ingress-nginx:  
        gnetId: 9614  
        revision: 1
        datasource: Prometheus      
  plugins:
    - grafana-piechart-panel
  sidecar:
    dashboards:
      enabled: true
      label: grafana_dashboard
  adminUser: "admin"
  adminPassword: "grafana"
  grafana.ini:
    log:
      level: warn
      format: json
    auth.anonymous:
      enabled: true
      org_name: "Main Org."
      org_role: "Admin"
    auth.basic:
      enabled: true
